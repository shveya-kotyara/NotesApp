'use strict';

var PROPERTIES = ['rss', 'heapTotal', 'heapUsed', 'external'];
var memory;
module.exports = {
  initialise: initialise,
  update: update,
  report: report
};

function initialise() {
  memory = PROPERTIES.reduce(function (result, name) {
    result[name] = {
      sum: 0,
      hwm: 0
    };
    return result;
  }, {
    count: 0
  });
}

function update() {
  var currentMemory = process.memoryUsage();
  PROPERTIES.forEach(function (name) {
    return updateProperty(name, currentMemory);
  });
}

function updateProperty(name, currentMemory) {
  var m = memory[name];
  var c = currentMemory[name];
  m.sum += c;

  if (c > m.hwm) {
    m.hwm = c;
  }
}

function report() {
  PROPERTIES.forEach(function (name) {
    return reportProperty(name);
  });
}

function reportProperty(name) {
  var m = memory[name]; // eslint-disable-next-line no-console

  console.log("mean ".concat(name, ": ").concat(m.sum / memory.count, "; hwm: ").concat(m.hwm));
}