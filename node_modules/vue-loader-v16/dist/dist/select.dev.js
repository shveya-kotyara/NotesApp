"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.selectBlock = void 0;

function selectBlock(descriptor, loaderContext, query, appendExtension) {
  // template
  if (query.type === "template") {
    // if we are receiving a query with type it can only come from a *.vue file
    // that contains that block, so the block is guaranteed to exist.
    var template = descriptor.template;

    if (appendExtension) {
      loaderContext.resourcePath += '.' + (template.lang || 'html');
    }

    loaderContext.callback(null, template.content, template.map);
    return;
  } // script


  if (query.type === "script") {
    // FIXME: #1723
    // I still don't know when & why `scriptCompiled` would be empty
    // need to work out a better fix later
    var script = descriptor.scriptCompiled || descriptor.script;

    if (appendExtension) {
      loaderContext.resourcePath += '.' + (script.lang || 'js');
    }

    loaderContext.callback(null, script.content, script.map);
    return;
  } // styles


  if (query.type === "style" && query.index != null) {
    var style = descriptor.styles[Number(query.index)];

    if (appendExtension) {
      loaderContext.resourcePath += '.' + (style.lang || 'css');
    }

    loaderContext.callback(null, style.content, style.map);
    return;
  } // custom


  if (query.type === 'custom' && query.index != null) {
    var block = descriptor.customBlocks[Number(query.index)];
    loaderContext.callback(null, block.content, block.map);
  }
}

exports.selectBlock = selectBlock;