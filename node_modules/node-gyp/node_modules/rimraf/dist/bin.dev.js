#!/usr/bin/env node
"use strict";

var rimraf = require('./');

var path = require('path');

var isRoot = function isRoot(arg) {
  return /^(\/|[a-zA-Z]:\\)$/.test(path.resolve(arg));
};

var filterOutRoot = function filterOutRoot(arg) {
  var ok = preserveRoot === false || !isRoot(arg);

  if (!ok) {
    console.error("refusing to remove ".concat(arg));
    console.error('Set --no-preserve-root to allow this');
  }

  return ok;
};

var help = false;
var dashdash = false;
var noglob = false;
var preserveRoot = true;
var args = process.argv.slice(2).filter(function (arg) {
  if (dashdash) return !!arg;else if (arg === '--') dashdash = true;else if (arg === '--no-glob' || arg === '-G') noglob = true;else if (arg === '--glob' || arg === '-g') noglob = false;else if (arg.match(/^(-+|\/)(h(elp)?|\?)$/)) help = true;else if (arg === '--preserve-root') preserveRoot = true;else if (arg === '--no-preserve-root') preserveRoot = false;else return !!arg;
}).filter(function (arg) {
  return !preserveRoot || filterOutRoot(arg);
});

var go = function go(n) {
  if (n >= args.length) return;
  var options = noglob ? {
    glob: false
  } : {};
  rimraf(args[n], options, function (er) {
    if (er) throw er;
    go(n + 1);
  });
};

if (help || args.length === 0) {
  // If they didn't ask for help, then this is not a "success"
  var log = help ? console.log : console.error;
  log('Usage: rimraf <path> [<path> ...]');
  log('');
  log('  Deletes all files and folders at "path" recursively.');
  log('');
  log('Options:');
  log('');
  log('  -h, --help          Display this usage info');
  log('  -G, --no-glob       Do not expand glob patterns in arguments');
  log('  -g, --glob          Expand glob patterns in arguments (default)');
  log('  --preserve-root     Do not remove \'/\' (default)');
  log('  --no-preserve-root  Do not treat \'/\' specially');
  log('  --                  Stop parsing flags');
  process.exit(help ? 0 : 1);
} else go(0);