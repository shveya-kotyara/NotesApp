'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Defaults = require('./Defaults.js');

var Parser =
/*#__PURE__*/
function () {
  function Parser(config) {
    _classCallCheck(this, Parser);

    if (!config) {
      config = new Defaults();
    }

    this.delimiter = config.delimiter;
  }

  _createClass(Parser, [{
    key: "format",
    value: function format(message) {
      if (!message.data && message.data !== false && message.data !== 0) {
        message.data = {};
      }

      if (message.data['_maxListeners']) {
        message.data = {};
      }

      message = message.JSON + this.delimiter;
      return message;
    }
  }, {
    key: "parse",
    value: function parse(data) {
      var events = data.split(this.delimiter);
      events.pop();
      return events;
    }
  }]);

  return Parser;
}();

module.exports = Parser;