'use strict';

var pRetry = require('p-retry');

var portfinder = require('portfinder');

var defaultPort = require('./defaultPort');

var defaultTo = require('./defaultTo');

var tryParseInt = require('./tryParseInt');

function runPortFinder() {
  return new Promise(function (resolve, reject) {
    portfinder.basePort = defaultPort;
    portfinder.getPort(function (error, port) {
      if (error) {
        return reject(error);
      }

      return resolve(port);
    });
  });
}

function findPort(port) {
  if (port) {
    return Promise.resolve(port);
  } // Try to find unused port and listen on it for 3 times,
  // if port is not specified in options.
  // Because NaN == null is false, defaultTo fails if parseInt returns NaN
  // so the tryParseInt function is introduced to handle NaN


  var defaultPortRetry = defaultTo(tryParseInt(process.env.DEFAULT_PORT_RETRY), 3);
  return pRetry(runPortFinder, {
    retries: defaultPortRetry
  });
}

module.exports = findPort;