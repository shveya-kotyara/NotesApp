/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var NodeMainTemplatePlugin = require("./NodeMainTemplatePlugin");

var NodeChunkTemplatePlugin = require("./NodeChunkTemplatePlugin");

var NodeHotUpdateChunkTemplatePlugin = require("./NodeHotUpdateChunkTemplatePlugin");

var NodeTemplatePlugin =
/*#__PURE__*/
function () {
  function NodeTemplatePlugin(options) {
    _classCallCheck(this, NodeTemplatePlugin);

    options = options || {};
    this.asyncChunkLoading = options.asyncChunkLoading;
  }

  _createClass(NodeTemplatePlugin, [{
    key: "apply",
    value: function apply(compiler) {
      var _this = this;

      compiler.hooks.thisCompilation.tap("NodeTemplatePlugin", function (compilation) {
        new NodeMainTemplatePlugin(_this.asyncChunkLoading).apply(compilation.mainTemplate);
        new NodeChunkTemplatePlugin().apply(compilation.chunkTemplate);
        new NodeHotUpdateChunkTemplatePlugin().apply(compilation.hotUpdateChunkTemplate);
      });
    }
  }]);

  return NodeTemplatePlugin;
}();

module.exports = NodeTemplatePlugin;