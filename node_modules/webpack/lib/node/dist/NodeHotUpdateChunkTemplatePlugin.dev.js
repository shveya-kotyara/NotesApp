/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require("webpack-sources"),
    ConcatSource = _require.ConcatSource;

var NodeHotUpdateChunkTemplatePlugin =
/*#__PURE__*/
function () {
  function NodeHotUpdateChunkTemplatePlugin() {
    _classCallCheck(this, NodeHotUpdateChunkTemplatePlugin);
  }

  _createClass(NodeHotUpdateChunkTemplatePlugin, [{
    key: "apply",
    value: function apply(hotUpdateChunkTemplate) {
      hotUpdateChunkTemplate.hooks.render.tap("NodeHotUpdateChunkTemplatePlugin", function (modulesSource, modules, removedModules, hash, id) {
        var source = new ConcatSource();
        source.add("exports.id = " + JSON.stringify(id) + ";\nexports.modules = ");
        source.add(modulesSource);
        source.add(";");
        return source;
      });
      hotUpdateChunkTemplate.hooks.hash.tap("NodeHotUpdateChunkTemplatePlugin", function (hash) {
        hash.update("NodeHotUpdateChunkTemplatePlugin");
        hash.update("3");
        hash.update(hotUpdateChunkTemplate.outputOptions.hotUpdateFunction + "");
        hash.update(hotUpdateChunkTemplate.outputOptions.library + "");
      });
    }
  }]);

  return NodeHotUpdateChunkTemplatePlugin;
}();

module.exports = NodeHotUpdateChunkTemplatePlugin;