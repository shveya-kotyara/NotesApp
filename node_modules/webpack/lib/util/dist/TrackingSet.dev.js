/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

module.exports =
/*#__PURE__*/
function () {
  function TrackingSet(set) {
    _classCallCheck(this, TrackingSet);

    this.set = set;
    this.set2 = new Set();
    this.stack = set.stack;
  }

  _createClass(TrackingSet, [{
    key: "add",
    value: function add(item) {
      this.set2.add(item);
      return this.set.add(item);
    }
  }, {
    key: "delete",
    value: function _delete(item) {
      this.set2["delete"](item);
      return this.set["delete"](item);
    }
  }, {
    key: "has",
    value: function has(item) {
      return this.set.has(item);
    }
  }, {
    key: "createChild",
    value: function createChild() {
      return this.set.createChild();
    }
  }, {
    key: "getAddedItems",
    value: function getAddedItems() {
      return this.set2;
    }
  }]);

  return TrackingSet;
}();