/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var RequireEnsureItemDependency = require("./RequireEnsureItemDependency");

var RequireEnsureDependency = require("./RequireEnsureDependency");

var NullFactory = require("../NullFactory");

var RequireEnsureDependenciesBlockParserPlugin = require("./RequireEnsureDependenciesBlockParserPlugin");

var ParserHelpers = require("../ParserHelpers");

var RequireEnsurePlugin =
/*#__PURE__*/
function () {
  function RequireEnsurePlugin() {
    _classCallCheck(this, RequireEnsurePlugin);
  }

  _createClass(RequireEnsurePlugin, [{
    key: "apply",
    value: function apply(compiler) {
      compiler.hooks.compilation.tap("RequireEnsurePlugin", function (compilation, _ref) {
        var normalModuleFactory = _ref.normalModuleFactory;
        compilation.dependencyFactories.set(RequireEnsureItemDependency, normalModuleFactory);
        compilation.dependencyTemplates.set(RequireEnsureItemDependency, new RequireEnsureItemDependency.Template());
        compilation.dependencyFactories.set(RequireEnsureDependency, new NullFactory());
        compilation.dependencyTemplates.set(RequireEnsureDependency, new RequireEnsureDependency.Template());

        var handler = function handler(parser, parserOptions) {
          if (parserOptions.requireEnsure !== undefined && !parserOptions.requireEnsure) return;
          new RequireEnsureDependenciesBlockParserPlugin().apply(parser);
          parser.hooks.evaluateTypeof["for"]("require.ensure").tap("RequireEnsurePlugin", ParserHelpers.evaluateToString("function"));
          parser.hooks["typeof"]["for"]("require.ensure").tap("RequireEnsurePlugin", ParserHelpers.toConstantDependency(parser, JSON.stringify("function")));
        };

        normalModuleFactory.hooks.parser["for"]("javascript/auto").tap("RequireEnsurePlugin", handler);
        normalModuleFactory.hooks.parser["for"]("javascript/dynamic").tap("RequireEnsurePlugin", handler);
      });
    }
  }]);

  return RequireEnsurePlugin;
}();

module.exports = RequireEnsurePlugin;