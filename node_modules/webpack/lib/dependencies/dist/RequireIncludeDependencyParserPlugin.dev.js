/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var RequireIncludeDependency = require("./RequireIncludeDependency");

module.exports =
/*#__PURE__*/
function () {
  function RequireIncludeDependencyParserPlugin() {
    _classCallCheck(this, RequireIncludeDependencyParserPlugin);
  }

  _createClass(RequireIncludeDependencyParserPlugin, [{
    key: "apply",
    value: function apply(parser) {
      parser.hooks.call["for"]("require.include").tap("RequireIncludeDependencyParserPlugin", function (expr) {
        if (expr.arguments.length !== 1) return;
        var param = parser.evaluateExpression(expr.arguments[0]);
        if (!param.isString()) return;
        var dep = new RequireIncludeDependency(param.string, expr.range);
        dep.loc = expr.loc;
        parser.state.current.addDependency(dep);
        return true;
      });
    }
  }]);

  return RequireIncludeDependencyParserPlugin;
}();