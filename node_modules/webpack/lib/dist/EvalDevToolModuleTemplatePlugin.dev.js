/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require("webpack-sources"),
    RawSource = _require.RawSource;

var ModuleFilenameHelpers = require("./ModuleFilenameHelpers");

var cache = new WeakMap();

var EvalDevToolModuleTemplatePlugin =
/*#__PURE__*/
function () {
  function EvalDevToolModuleTemplatePlugin(options) {
    _classCallCheck(this, EvalDevToolModuleTemplatePlugin);

    this.sourceUrlComment = options.sourceUrlComment || "\n//# sourceURL=[url]";
    this.moduleFilenameTemplate = options.moduleFilenameTemplate || "webpack://[namespace]/[resourcePath]?[loaders]";
    this.namespace = options.namespace || "";
  }

  _createClass(EvalDevToolModuleTemplatePlugin, [{
    key: "apply",
    value: function apply(moduleTemplate) {
      var _this = this;

      moduleTemplate.hooks.module.tap("EvalDevToolModuleTemplatePlugin", function (source, module) {
        var cacheEntry = cache.get(source);
        if (cacheEntry !== undefined) return cacheEntry;
        var content = source.source();
        var str = ModuleFilenameHelpers.createFilename(module, {
          moduleFilenameTemplate: _this.moduleFilenameTemplate,
          namespace: _this.namespace
        }, moduleTemplate.runtimeTemplate.requestShortener);

        var footer = "\n" + _this.sourceUrlComment.replace(/\[url\]/g, encodeURI(str).replace(/%2F/g, "/").replace(/%20/g, "_").replace(/%5E/g, "^").replace(/%5C/g, "\\").replace(/^\//, ""));

        var result = new RawSource("eval(".concat(JSON.stringify(content + footer), ");"));
        cache.set(source, result);
        return result;
      });
      moduleTemplate.hooks.hash.tap("EvalDevToolModuleTemplatePlugin", function (hash) {
        hash.update("EvalDevToolModuleTemplatePlugin");
        hash.update("2");
      });
    }
  }]);

  return EvalDevToolModuleTemplatePlugin;
}();

module.exports = EvalDevToolModuleTemplatePlugin;