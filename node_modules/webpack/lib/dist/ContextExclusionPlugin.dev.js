"use strict";
/** @typedef {import("./Compiler")} Compiler */

/** @typedef {import("./ContextModuleFactory")} ContextModuleFactory */

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ContextExclusionPlugin =
/*#__PURE__*/
function () {
  /**
   * @param {RegExp} negativeMatcher Matcher regular expression
   */
  function ContextExclusionPlugin(negativeMatcher) {
    _classCallCheck(this, ContextExclusionPlugin);

    this.negativeMatcher = negativeMatcher;
  }
  /**
   * Apply the plugin
   * @param {Compiler} compiler Webpack Compiler
   * @returns {void}
   */


  _createClass(ContextExclusionPlugin, [{
    key: "apply",
    value: function apply(compiler) {
      var _this = this;

      compiler.hooks.contextModuleFactory.tap("ContextExclusionPlugin", function (cmf) {
        cmf.hooks.contextModuleFiles.tap("ContextExclusionPlugin", function (files) {
          return files.filter(function (filePath) {
            return !_this.negativeMatcher.test(filePath);
          });
        });
      });
    }
  }]);

  return ContextExclusionPlugin;
}();

module.exports = ContextExclusionPlugin;