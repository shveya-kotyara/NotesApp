/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ModuleFilenameHelpers = require("./ModuleFilenameHelpers");

var SourceMapDevToolModuleOptionsPlugin =
/*#__PURE__*/
function () {
  function SourceMapDevToolModuleOptionsPlugin(options) {
    _classCallCheck(this, SourceMapDevToolModuleOptionsPlugin);

    this.options = options;
  }

  _createClass(SourceMapDevToolModuleOptionsPlugin, [{
    key: "apply",
    value: function apply(compilation) {
      var options = this.options;

      if (options.module !== false) {
        compilation.hooks.buildModule.tap("SourceMapDevToolModuleOptionsPlugin", function (module) {
          module.useSourceMap = true;
        });
      }

      if (options.lineToLine === true) {
        compilation.hooks.buildModule.tap("SourceMapDevToolModuleOptionsPlugin", function (module) {
          module.lineToLine = true;
        });
      } else if (options.lineToLine) {
        compilation.hooks.buildModule.tap("SourceMapDevToolModuleOptionsPlugin", function (module) {
          if (!module.resource) return;
          var resourcePath = module.resource;
          var idx = resourcePath.indexOf("?");
          if (idx >= 0) resourcePath = resourcePath.substr(0, idx);
          module.lineToLine = ModuleFilenameHelpers.matchObject(options.lineToLine, resourcePath);
        });
      }
    }
  }]);

  return SourceMapDevToolModuleOptionsPlugin;
}();

module.exports = SourceMapDevToolModuleOptionsPlugin;