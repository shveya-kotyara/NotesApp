/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var parseJson = require("json-parse-better-errors");

var JsonExportsDependency = require("./dependencies/JsonExportsDependency");

var JsonParser =
/*#__PURE__*/
function () {
  function JsonParser(options) {
    _classCallCheck(this, JsonParser);

    this.options = options;
  }

  _createClass(JsonParser, [{
    key: "parse",
    value: function parse(source, state) {
      var data = parseJson(source[0] === "\uFEFF" ? source.slice(1) : source);
      state.module.buildInfo.jsonData = data;
      state.module.buildMeta.exportsType = "named";

      if (_typeof(data) === "object" && data) {
        state.module.addDependency(new JsonExportsDependency(Object.keys(data)));
      }

      state.module.addDependency(new JsonExportsDependency(["default"]));
      return state;
    }
  }]);

  return JsonParser;
}();

module.exports = JsonParser;