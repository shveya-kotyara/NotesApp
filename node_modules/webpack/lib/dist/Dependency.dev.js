/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var util = require("util");

var compareLocations = require("./compareLocations");

var DependencyReference = require("./dependencies/DependencyReference");
/** @typedef {import("./Module")} Module */

/** @typedef {import("webpack-sources").Source} Source */

/** @typedef {import("./RuntimeTemplate")} RuntimeTemplate */

/**
 * @typedef {Object} DependencyTemplate
 * @property {function(Dependency, Source, RuntimeTemplate, Map<Function, DependencyTemplate>): void} apply
 */

/** @typedef {Object} SourcePosition
 *  @property {number} line
 *  @property {number=} column
 */

/** @typedef {Object} RealDependencyLocation
 *  @property {SourcePosition} start
 *  @property {SourcePosition=} end
 *  @property {number=} index
 */

/** @typedef {Object} SynteticDependencyLocation
 *  @property {string} name
 *  @property {number=} index
 */

/** @typedef {SynteticDependencyLocation|RealDependencyLocation} DependencyLocation */


var Dependency =
/*#__PURE__*/
function () {
  function Dependency() {
    _classCallCheck(this, Dependency);

    /** @type {Module|null} */
    this.module = null; // TODO remove in webpack 5

    /** @type {boolean} */

    this.weak = false;
    /** @type {boolean} */

    this.optional = false;
    /** @type {DependencyLocation} */

    this.loc = undefined;
  }

  _createClass(Dependency, [{
    key: "getResourceIdentifier",
    value: function getResourceIdentifier() {
      return null;
    } // Returns the referenced module and export

  }, {
    key: "getReference",
    value: function getReference() {
      if (!this.module) return null;
      return new DependencyReference(this.module, true, this.weak);
    } // Returns the exported names

  }, {
    key: "getExports",
    value: function getExports() {
      return null;
    }
  }, {
    key: "getWarnings",
    value: function getWarnings() {
      return null;
    }
  }, {
    key: "getErrors",
    value: function getErrors() {
      return null;
    }
  }, {
    key: "updateHash",
    value: function updateHash(hash) {
      hash.update((this.module && this.module.id) + "");
    }
  }, {
    key: "disconnect",
    value: function disconnect() {
      this.module = null;
    }
  }]);

  return Dependency;
}(); // TODO remove in webpack 5


Dependency.compare = util.deprecate(function (a, b) {
  return compareLocations(a.loc, b.loc);
}, "Dependency.compare is deprecated and will be removed in the next major version");
module.exports = Dependency;