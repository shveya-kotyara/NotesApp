/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var _require = require("webpack-sources"),
    ConcatSource = _require.ConcatSource;
/** @typedef {import("./Compilation")} Compilation */

/**
 * @param {string[]} accessor the accessor to convert to path
 * @returns {string} the path
 */


var accessorToObjectAccess = function accessorToObjectAccess(accessor) {
  return accessor.map(function (a) {
    return "[".concat(JSON.stringify(a), "]");
  }).join("");
};

var ExportPropertyMainTemplatePlugin =
/*#__PURE__*/
function () {
  /**
   * @param {string|string[]} property the name of the property to export
   */
  function ExportPropertyMainTemplatePlugin(property) {
    _classCallCheck(this, ExportPropertyMainTemplatePlugin);

    this.property = property;
  }
  /**
   * @param {Compilation} compilation the compilation instance
   * @returns {void}
   */


  _createClass(ExportPropertyMainTemplatePlugin, [{
    key: "apply",
    value: function apply(compilation) {
      var _this = this;

      var mainTemplate = compilation.mainTemplate,
          chunkTemplate = compilation.chunkTemplate;

      var onRenderWithEntry = function onRenderWithEntry(source, chunk, hash) {
        var postfix = "".concat(accessorToObjectAccess([].concat(_this.property)));
        return new ConcatSource(source, postfix);
      };

      for (var _i = 0, _arr = [mainTemplate, chunkTemplate]; _i < _arr.length; _i++) {
        var template = _arr[_i];
        template.hooks.renderWithEntry.tap("ExportPropertyMainTemplatePlugin", onRenderWithEntry);
      }

      mainTemplate.hooks.hash.tap("ExportPropertyMainTemplatePlugin", function (hash) {
        hash.update("export property");
        hash.update("".concat(_this.property));
      });
    }
  }]);

  return ExportPropertyMainTemplatePlugin;
}();

module.exports = ExportPropertyMainTemplatePlugin;