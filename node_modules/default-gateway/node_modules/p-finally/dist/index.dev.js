'use strict';

module.exports = function _callee(promise) {
  var onFinally,
      value,
      _args = arguments;
  return regeneratorRuntime.async(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          onFinally = _args.length > 1 && _args[1] !== undefined ? _args[1] : function () {};
          _context.prev = 1;
          _context.next = 4;
          return regeneratorRuntime.awrap(promise);

        case 4:
          value = _context.sent;
          _context.next = 12;
          break;

        case 7:
          _context.prev = 7;
          _context.t0 = _context["catch"](1);
          _context.next = 11;
          return regeneratorRuntime.awrap(onFinally());

        case 11:
          throw _context.t0;

        case 12:
          _context.next = 14;
          return regeneratorRuntime.awrap(onFinally());

        case 14:
          return _context.abrupt("return", value);

        case 15:
        case "end":
          return _context.stop();
      }
    }
  }, null, null, [[1, 7]]);
};