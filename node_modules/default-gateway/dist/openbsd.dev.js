"use strict";

var net = require("net");

var execa = require("execa");

var dests = ["default", "0.0.0.0", "0.0.0.0/0", "::", "::/0"];
var args = {
  v4: ["-rn", "-f", "inet"],
  v6: ["-rn", "-f", "inet6"]
};

var parse = function parse(stdout) {
  var result;
  (stdout || "").trim().split("\n").some(function (line) {
    var results = line.split(/ +/) || [];
    var target = results[0];
    var gateway = results[1];
    var iface = results[7];

    if (dests.includes(target) && gateway && net.isIP(gateway)) {
      result = {
        gateway: gateway,
        "interface": iface ? iface : null
      };
      return true;
    }
  });

  if (!result) {
    throw new Error("Unable to determine default gateway");
  }

  return result;
};

var promise = function promise(family) {
  var _ref, stdout;

  return regeneratorRuntime.async(function promise$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          _context.next = 2;
          return regeneratorRuntime.awrap(execa("netstat", args[family]));

        case 2:
          _ref = _context.sent;
          stdout = _ref.stdout;
          return _context.abrupt("return", parse(stdout));

        case 5:
        case "end":
          return _context.stop();
      }
    }
  });
};

var sync = function sync(family) {
  var _execa$sync = execa.sync("netstat", args[family]),
      stdout = _execa$sync.stdout;

  return parse(stdout);
};

module.exports.v4 = function () {
  return promise("v4");
};

module.exports.v6 = function () {
  return promise("v6");
};

module.exports.v4.sync = function () {
  return sync("v4");
};

module.exports.v6.sync = function () {
  return sync("v6");
};