'use strict';

var mimicFn = require('mimic-fn');

module.exports = function (fn, opts) {
  // TODO: Remove this in v3
  if (opts === true) {
    throw new TypeError('The second argument is now an options object');
  }

  if (typeof fn !== 'function') {
    throw new TypeError('Expected a function');
  }

  opts = opts || {};
  var ret;
  var called = false;
  var fnName = fn.displayName || fn.name || '<anonymous>';

  var onetime = function onetime() {
    if (called) {
      if (opts["throw"] === true) {
        throw new Error("Function `".concat(fnName, "` can only be called once"));
      }

      return ret;
    }

    called = true;
    ret = fn.apply(this, arguments);
    fn = null;
    return ret;
  };

  mimicFn(onetime, fn);
  return onetime;
};