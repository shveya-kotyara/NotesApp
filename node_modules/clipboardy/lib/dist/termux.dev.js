'use strict';

var execa = require('execa');

var handler = function handler(error) {
  if (error.code === 'ENOENT') {
    throw new Error('Couldn\'t find the termux-api scripts. You can install them with: apt install termux-api');
  }

  throw error;
};

module.exports = {
  copy: function copy(options) {
    return regeneratorRuntime.async(function copy$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.prev = 0;
            _context.next = 3;
            return regeneratorRuntime.awrap(execa('termux-clipboard-set', options));

          case 3:
            _context.next = 8;
            break;

          case 5:
            _context.prev = 5;
            _context.t0 = _context["catch"](0);
            handler(_context.t0);

          case 8:
          case "end":
            return _context.stop();
        }
      }
    }, null, null, [[0, 5]]);
  },
  paste: function paste(options) {
    return regeneratorRuntime.async(function paste$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            _context2.next = 3;
            return regeneratorRuntime.awrap(execa.stdout('termux-clipboard-get', options));

          case 3:
            return _context2.abrupt("return", _context2.sent);

          case 6:
            _context2.prev = 6;
            _context2.t0 = _context2["catch"](0);
            handler(_context2.t0);

          case 9:
          case "end":
            return _context2.stop();
        }
      }
    }, null, null, [[0, 6]]);
  },
  copySync: function copySync(options) {
    try {
      execa.sync('termux-clipboard-set', options);
    } catch (error) {
      handler(error);
    }
  },
  pasteSync: function pasteSync(options) {
    try {
      return execa.sync('termux-clipboard-get', options);
    } catch (error) {
      handler(error);
    }
  }
};