"use strict";

var _require = require('util'),
    inspect = _require.inspect;

var _ = require('lodash');

var MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
exports.createAssetsFilter = createAssetsFilter;

function createAssetsFilter(excludePatterns) {
  var excludeFunctions = _(excludePatterns).castArray().compact().map(function (pattern) {
    if (typeof pattern === 'string') {
      pattern = new RegExp(pattern, 'u');
    }

    if (_.isRegExp(pattern)) {
      return function (asset) {
        return pattern.test(asset);
      };
    }

    if (!_.isFunction(pattern)) {
      throw new TypeError("Pattern should be either string, RegExp or a function, but \"".concat(inspect(pattern, {
        depth: 0
      }), "\" got."));
    }

    return pattern;
  }).value();

  if (excludeFunctions.length) {
    return function (asset) {
      return _.every(excludeFunctions, function (fn) {
        return fn(asset) !== true;
      });
    };
  } else {
    return function () {
      return true;
    };
  }
}
/**
 * @desc get string of current time
 * format: dd/MMM HH:mm
 * */


exports.defaultTitle = function () {
  var time = new Date();
  var year = time.getFullYear();
  var month = MONTHS[time.getMonth()];
  var day = time.getDate();
  var hour = "0".concat(time.getHours()).slice(-2);
  var minute = "0".concat(time.getMinutes()).slice(-2);
  var currentTime = "".concat(day, " ").concat(month, " ").concat(year, " at ").concat(hour, ":").concat(minute);
  return "".concat(process.env.npm_package_name || 'Webpack Bundle Analyzer', " [").concat(currentTime, "]");
};