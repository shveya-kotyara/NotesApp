"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _gzipSize = _interopRequireDefault(require("gzip-size"));

var _Node2 = _interopRequireDefault(require("./Node"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Module =
/*#__PURE__*/
function (_Node) {
  _inherits(Module, _Node);

  function Module(name, data, parent) {
    var _this;

    _classCallCheck(this, Module);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Module).call(this, name, parent));
    _this.data = data;
    return _this;
  }

  _createClass(Module, [{
    key: "mergeData",
    value: function mergeData(data) {
      if (data.size) {
        this.size += data.size;
      }

      if (data.parsedSrc) {
        this.src = (this.src || '') + data.parsedSrc;
      }
    }
  }, {
    key: "toChartData",
    value: function toChartData() {
      return {
        id: this.data.id,
        label: this.name,
        path: this.path,
        statSize: this.size,
        parsedSize: this.parsedSize,
        gzipSize: this.gzipSize
      };
    }
  }, {
    key: "src",
    get: function get() {
      return this.data.parsedSrc;
    },
    set: function set(value) {
      this.data.parsedSrc = value;
      delete this._gzipSize;
    }
  }, {
    key: "size",
    get: function get() {
      return this.data.size;
    },
    set: function set(value) {
      this.data.size = value;
    }
  }, {
    key: "parsedSize",
    get: function get() {
      return this.src ? this.src.length : undefined;
    }
  }, {
    key: "gzipSize",
    get: function get() {
      if (!_lodash["default"].has(this, '_gzipSize')) {
        this._gzipSize = this.src ? _gzipSize["default"].sync(this.src) : undefined;
      }

      return this._gzipSize;
    }
  }]);

  return Module;
}(_Node2["default"]);

exports["default"] = Module;
;