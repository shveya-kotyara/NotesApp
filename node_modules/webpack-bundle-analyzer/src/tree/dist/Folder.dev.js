"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _lodash = _interopRequireDefault(require("lodash"));

var _gzipSize = _interopRequireDefault(require("gzip-size"));

var _Module = _interopRequireDefault(require("./Module"));

var _BaseFolder2 = _interopRequireDefault(require("./BaseFolder"));

var _ConcatenatedModule = _interopRequireDefault(require("./ConcatenatedModule"));

var _utils = require("./utils");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

var Folder =
/*#__PURE__*/
function (_BaseFolder) {
  _inherits(Folder, _BaseFolder);

  function Folder() {
    _classCallCheck(this, Folder);

    return _possibleConstructorReturn(this, _getPrototypeOf(Folder).apply(this, arguments));
  }

  _createClass(Folder, [{
    key: "addModule",
    value: function addModule(moduleData) {
      var pathParts = (0, _utils.getModulePathParts)(moduleData);

      if (!pathParts) {
        return;
      }

      var _ref = [pathParts.slice(0, -1), _lodash["default"].last(pathParts)],
          folders = _ref[0],
          fileName = _ref[1];
      var currentFolder = this;

      _lodash["default"].each(folders, function (folderName) {
        var childNode = currentFolder.getChild(folderName);

        if ( // Folder is not created yet
        !childNode || // In some situations (invalid usage of dynamic `require()`) webpack generates a module with empty require
        // context, but it's moduleId points to a directory in filesystem.
        // In this case we replace this `File` node with `Folder`.
        // See `test/stats/with-invalid-dynamic-require.json` as an example.
        !(childNode instanceof Folder)) {
          childNode = currentFolder.addChildFolder(new Folder(folderName));
        }

        currentFolder = childNode;
      });

      var ModuleConstructor = moduleData.modules ? _ConcatenatedModule["default"] : _Module["default"];
      var module = new ModuleConstructor(fileName, moduleData, this);
      currentFolder.addChildModule(module);
    }
  }, {
    key: "toChartData",
    value: function toChartData() {
      return _objectSpread({}, _get(_getPrototypeOf(Folder.prototype), "toChartData", this).call(this), {
        parsedSize: this.parsedSize,
        gzipSize: this.gzipSize
      });
    }
  }, {
    key: "parsedSize",
    get: function get() {
      return this.src ? this.src.length : 0;
    }
  }, {
    key: "gzipSize",
    get: function get() {
      if (!_lodash["default"].has(this, '_gzipSize')) {
        this._gzipSize = this.src ? _gzipSize["default"].sync(this.src) : 0;
      }

      return this._gzipSize;
    }
  }]);

  return Folder;
}(_BaseFolder2["default"]);

exports["default"] = Folder;
;