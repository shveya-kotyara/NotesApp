'use strict';

var path = require('path');

var pathExists = require('path-exists');

var pLocate = require('p-locate');

module.exports = function (iterable, options) {
  options = Object.assign({
    cwd: process.cwd()
  }, options);
  return pLocate(iterable, function (el) {
    return pathExists(path.resolve(options.cwd, el));
  }, options);
};

module.exports.sync = function (iterable, options) {
  options = Object.assign({
    cwd: process.cwd()
  }, options);
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var el = _step.value;

      if (pathExists.sync(path.resolve(options.cwd, el))) {
        return el;
      }
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator["return"] != null) {
        _iterator["return"]();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }
};