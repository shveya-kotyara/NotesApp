"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.maybeAsync = maybeAsync;
exports.forwardAsync = forwardAsync;
exports.isThenable = isThenable;
exports.waitFor = exports.onFirstPause = exports.isAsync = void 0;

function _gensync() {
  var data = _interopRequireDefault(require("gensync"));

  _gensync = function _gensync() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var id = function id(x) {
  return x;
};

var runGenerator = (0, _gensync()["default"])(
/*#__PURE__*/
regeneratorRuntime.mark(function _callee(item) {
  return regeneratorRuntime.wrap(function _callee$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.delegateYield(item, "t0", 1);

        case 1:
          return _context.abrupt("return", _context.t0);

        case 2:
        case "end":
          return _context.stop();
      }
    }
  }, _callee);
}));
var isAsync = (0, _gensync()["default"])({
  sync: function sync() {
    return false;
  },
  errback: function errback(cb) {
    return cb(null, true);
  }
});
exports.isAsync = isAsync;

function maybeAsync(fn, message) {
  return (0, _gensync()["default"])({
    sync: function sync() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var result = fn.apply(this, args);
      if (isThenable(result)) throw new Error(message);
      return result;
    },
    async: function async() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return Promise.resolve(fn.apply(this, args));
    }
  });
}

var withKind = (0, _gensync()["default"])({
  sync: function sync(cb) {
    return cb("sync");
  },
  async: function async(cb) {
    return cb("async");
  }
});

function forwardAsync(action, cb) {
  var g = (0, _gensync()["default"])(action);
  return withKind(function (kind) {
    var adapted = g[kind];
    return cb(adapted);
  });
}

var onFirstPause = (0, _gensync()["default"])({
  name: "onFirstPause",
  arity: 2,
  sync: function sync(item) {
    return runGenerator.sync(item);
  },
  errback: function errback(item, firstPause, cb) {
    var completed = false;
    runGenerator.errback(item, function (err, value) {
      completed = true;
      cb(err, value);
    });

    if (!completed) {
      firstPause();
    }
  }
});
exports.onFirstPause = onFirstPause;
var waitFor = (0, _gensync()["default"])({
  sync: id,
  async: id
});
exports.waitFor = waitFor;

function isThenable(val) {
  return !!val && (_typeof(val) === "object" || typeof val === "function") && !!val.then && typeof val.then === "function";
}