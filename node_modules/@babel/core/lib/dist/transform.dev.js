"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transformAsync = exports.transformSync = exports.transform = void 0;

function _gensync() {
  var data = _interopRequireDefault(require("gensync"));

  _gensync = function _gensync() {
    return data;
  };

  return data;
}

var _config = _interopRequireDefault(require("./config"));

var _transformation = require("./transformation");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}

var transformRunner = (0, _gensync()["default"])(
/*#__PURE__*/
regeneratorRuntime.mark(function transform(code, opts) {
  var config;
  return regeneratorRuntime.wrap(function transform$(_context) {
    while (1) {
      switch (_context.prev = _context.next) {
        case 0:
          return _context.delegateYield((0, _config["default"])(opts), "t0", 1);

        case 1:
          config = _context.t0;

          if (!(config === null)) {
            _context.next = 4;
            break;
          }

          return _context.abrupt("return", null);

        case 4:
          return _context.delegateYield((0, _transformation.run)(config, code), "t1", 5);

        case 5:
          return _context.abrupt("return", _context.t1);

        case 6:
        case "end":
          return _context.stop();
      }
    }
  }, transform);
}));

var transform = function transform(code, opts, callback) {
  if (typeof opts === "function") {
    callback = opts;
    opts = undefined;
  }

  if (callback === undefined) return transformRunner.sync(code, opts);
  transformRunner.errback(code, opts, callback);
};

exports.transform = transform;
var transformSync = transformRunner.sync;
exports.transformSync = transformSync;
var transformAsync = transformRunner.async;
exports.transformAsync = transformAsync;