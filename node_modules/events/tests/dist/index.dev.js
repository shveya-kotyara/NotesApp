"use strict";

var test = _require('tape');

var functionsHaveNames = _require('functions-have-names');

var hasSymbols = _require('has-symbols');

_require('./legacy-compat');

var common = _require('./common'); // we do this to easily wrap each file in a mocha test
// and also have browserify be able to statically analyze this file


var orig_require = _require;

var _require = function require(file) {
  test(file, function (t) {
    // Store the tape object so tests can access it.
    t.on('end', function () {
      delete common.test;
    });
    common.test = t;

    try {
      orig_require(file);
    } catch (err) {
      t.fail(err);
    }

    t.end();
  });
};

_require('./add-listeners.js');

_require('./check-listener-leaks.js');

_require('./errors.js');

_require('./events-list.js');

if (typeof Promise === 'function') {
  _require('./events-once.js');
} else {
  // Promise support is not available.
  test('./events-once.js', {
    skip: true
  }, function () {});
}

_require('./listener-count.js');

_require('./listeners-side-effects.js');

_require('./listeners.js');

_require('./max-listeners.js');

if (functionsHaveNames()) {
  _require('./method-names.js');
} else {
  // Function.name is not supported in IE
  test('./method-names.js', {
    skip: true
  }, function () {});
}

_require('./modify-in-emit.js');

_require('./num-args.js');

_require('./once.js');

_require('./prepend.js');

_require('./set-max-listeners-side-effects.js');

_require('./special-event-names.js');

_require('./subclass.js');

if (hasSymbols()) {
  _require('./symbols.js');
} else {
  // Symbol is not available.
  test('./symbols.js', {
    skip: true
  }, function () {});
}

_require('./remove-all-listeners.js');

_require('./remove-listeners.js');