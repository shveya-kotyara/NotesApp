"use strict";

var path = require('path');

var shellQuote = require('shell-quote');

var childProcess = require('child_process'); // Map from full process name to binary that starts the process
// We can't just re-use full process name, because it will spawn a new instance
// of the app every time


var COMMON_EDITORS_OSX = require('./editor-info/osx');

var COMMON_EDITORS_LINUX = require('./editor-info/linux');

var COMMON_EDITORS_WIN = require('./editor-info/windows');

module.exports = function guessEditor(specifiedEditor) {
  if (specifiedEditor) {
    return shellQuote.parse(specifiedEditor);
  } // We can find out which editor is currently running by:
  // `ps x` on macOS and Linux
  // `Get-Process` on Windows


  try {
    if (process.platform === 'darwin') {
      var output = childProcess.execSync('ps x').toString();
      var processNames = Object.keys(COMMON_EDITORS_OSX);

      for (var i = 0; i < processNames.length; i++) {
        var processName = processNames[i];

        if (output.indexOf(processName) !== -1) {
          return [COMMON_EDITORS_OSX[processName]];
        }
      }
    } else if (process.platform === 'win32') {
      var _output = childProcess.execSync('powershell -Command "Get-Process | Select-Object Path"', {
        stdio: ['pipe', 'pipe', 'ignore']
      }).toString();

      var runningProcesses = _output.split('\r\n');

      for (var _i = 0; _i < runningProcesses.length; _i++) {
        // `Get-Process` sometimes returns empty lines
        if (!runningProcesses[_i]) {
          continue;
        }

        var fullProcessPath = runningProcesses[_i].trim();

        var shortProcessName = path.basename(fullProcessPath);

        if (COMMON_EDITORS_WIN.indexOf(shortProcessName) !== -1) {
          return [fullProcessPath];
        }
      }
    } else if (process.platform === 'linux') {
      // --no-heading No header line
      // x List all processes owned by you
      // -o comm Need only names column
      var _output2 = childProcess.execSync('ps x --no-heading -o comm --sort=comm').toString();

      var _processNames = Object.keys(COMMON_EDITORS_LINUX);

      for (var _i2 = 0; _i2 < _processNames.length; _i2++) {
        var _processName = _processNames[_i2];

        if (_output2.indexOf(_processName) !== -1) {
          return [COMMON_EDITORS_LINUX[_processName]];
        }
      }
    }
  } catch (error) {} // Ignore...
  // Last resort, use old skool env vars


  if (process.env.VISUAL) {
    return [process.env.VISUAL];
  } else if (process.env.EDITOR) {
    return [process.env.EDITOR];
  }

  return [null];
};