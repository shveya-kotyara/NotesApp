"use strict";

/**
 * @license
 * Copyright 2018 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
module.exports = function doesChunkBelongToHtml(_ref) {
  var chunk = _ref.chunk,
      htmlAssetsChunks = _ref.htmlAssetsChunks,
      compilation = _ref.compilation;
  // Get all the hashes of the HTML assets.
  var rootHashes = Object.values(htmlAssetsChunks).map(function (_ref2) {
    var hash = _ref2.hash;
    return hash;
  }); // Get a list of chunk groups that contain one of those hashes.

  var rootChunkGroups = compilation.chunkGroups.filter(function (chunkGroup) {
    return chunkGroup.chunks.filter(function (chunk) {
      return rootHashes.includes(chunk.renderedHash);
    });
  }); // Get an id for each of those chunk groups.

  var rootChunkGroupsIds = new Set(rootChunkGroups.map(function (_ref3) {
    var id = _ref3.id;
    return id;
  })); // Return true iff the chunk we're passed belongs to a group whose id is in
  // the list of root chunk groups.

  return Array.from(chunk.groupsIterable).some(function (_ref4) {
    var id = _ref4.id;
    return rootChunkGroupsIds.has(id);
  });
};