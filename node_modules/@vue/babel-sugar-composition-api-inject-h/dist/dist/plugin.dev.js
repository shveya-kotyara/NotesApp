"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _interopDefault(e) {
  return e && "object" == _typeof(e) && "default" in e ? e["default"] : e;
}

var syntaxJsx = _interopDefault(require("@babel/plugin-syntax-jsx"));

var importSource = "@vue/composition-api",
    hasJSX = function hasJSX(e, t) {
  var n = {
    hasJSX: !1
  };
  t.traverse({
    JSXElement: function JSXElement() {
      this.hasJSX = !0;
    }
  }, n);
  return n.hasJSX;
},
    remove$createElement = function remove$createElement(e, t) {
  t.traverse({
    ObjectMethod: function ObjectMethod(t) {
      "setup" === t.node.key.name && t.traverse({
        VariableDeclaration: function VariableDeclaration(t) {
          t.traverse({
            MemberExpression: function MemberExpression(n) {
              e.isThisExpression(n.node.object) && e.isIdentifier(n.node.property) && "$createElement" === n.node.property.name && t.remove();
            }
          });
        }
      });
    }
  });
},
    autoImportH = function autoImportH(e, t) {
  if (hasJSX(e, t)) {
    var n = t.get("body").filter(function (e) {
      return e.isImportDeclaration();
    }).map(function (e) {
      return e.node;
    }),
        i = n.filter(function (e) {
      return e.source.value === importSource;
    }),
        o = i.some(function (t) {
      return t.specifiers.some(function (t) {
        return e.isImportSpecifier(t) && "h" === t.local.name;
      });
    });

    if (!o) {
      var _n = e.importSpecifier(e.identifier("h"), e.identifier("h"));

      i.length > 0 ? i[0].specifiers.push(_n) : t.unshiftContainer("body", e.importDeclaration([_n], e.stringLiteral(importSource)));
    }
  }
};

var index = function index(e) {
  var t = e.types;
  return {
    inherits: syntaxJsx,
    visitor: {
      Program: function Program(e) {
        remove$createElement(t, e), autoImportH(t, e);
      }
    }
  };
};

module.exports = index;