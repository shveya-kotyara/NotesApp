"use strict";

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _interopDefault(e) {
  return e && "object" == _typeof(e) && "default" in e ? e["default"] : e;
}

var syntaxJsx = _interopDefault(require("@babel/plugin-syntax-jsx"));

var firstParamIsH = function firstParamIsH(e, n) {
  var t = n.get("params");
  return t.length && e.isIdentifier(t[0]) && "h" === t[0].node.name;
},
    hasJSX = function hasJSX(e, n) {
  var t = {
    hasJSX: !1
  };
  n.traverse({
    JSXElement: function JSXElement() {
      this.hasJSX = !0;
    }
  }, t);
  return t.hasJSX;
},
    isInsideJSXExpression = function isInsideJSXExpression(e, n) {
  if (!n.parentPath) return !1;
  if (e.isJSXExpressionContainer(n.parentPath)) return !0;
  return isInsideJSXExpression(e, n.parentPath);
};

var index = function index(e) {
  var n = e.types;
  return {
    inherits: syntaxJsx,
    visitor: {
      Program: function Program(e) {
        e.traverse({
          "ObjectMethod|ClassMethod": function ObjectMethodClassMethod(e) {
            if (!firstParamIsH(n, e) && hasJSX(n, e) && !isInsideJSXExpression(n, e)) {
              var t = "render" === e.node.key.name;
              e.get("body").unshiftContainer("body", n.variableDeclaration("const", [n.variableDeclarator(n.identifier("h"), t ? n.memberExpression(n.identifier("arguments"), n.numericLiteral(0), !0) : n.memberExpression(n.thisExpression(), n.identifier("$createElement")))]));
            }
          }
        });
      }
    }
  };
};

module.exports = index;