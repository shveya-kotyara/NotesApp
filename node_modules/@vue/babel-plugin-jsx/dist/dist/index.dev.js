"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

var __createBinding = void 0 && (void 0).__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = void 0 && (void 0).__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = void 0 && (void 0).__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __importDefault = void 0 && (void 0).__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var plugin_syntax_jsx_1 = __importDefault(require("@babel/plugin-syntax-jsx"));

var t = __importStar(require("@babel/types"));

var transform_vue_jsx_1 = __importDefault(require("./transform-vue-jsx"));

var sugar_fragment_1 = __importDefault(require("./sugar-fragment"));

var utils_1 = require("./utils");

exports["default"] = function () {
  return {
    name: 'babel-plugin-jsx',
    inherits: plugin_syntax_jsx_1["default"],
    visitor: Object.assign(Object.assign({
      Program: {
        exit: function exit(path, state) {
          var helpers = state.get(utils_1.JSX_HELPER_KEY);

          if (!helpers) {
            return;
          }

          var body = path.get('body');
          var specifierNames = new Set();
          body.filter(function (nodePath) {
            return t.isImportDeclaration(nodePath.node) && nodePath.node.source.value === 'vue';
          }).forEach(function (nodePath) {
            var shouldKeep = false;
            var newSpecifiers = nodePath.node.specifiers.filter(function (specifier) {
              if (t.isImportSpecifier(specifier)) {
                var imported = specifier.imported,
                    local = specifier.local;

                if (local.name === imported.name) {
                  specifierNames.add(imported.name);
                  return false;
                }

                return true;
              }

              if (t.isImportNamespaceSpecifier(specifier)) {
                // should keep when `import * as Vue from 'vue'`
                shouldKeep = true;
              }

              return false;
            });

            if (newSpecifiers.length) {
              nodePath.replaceWith(t.importDeclaration(newSpecifiers, t.stringLiteral('vue')));
            } else if (!shouldKeep) {
              nodePath.remove();
            }
          });
          var importedHelperKeys = new Set([].concat(_toConsumableArray(specifierNames), _toConsumableArray(helpers)));

          var specifiers = _toConsumableArray(importedHelperKeys).map(function (imported) {
            return t.importSpecifier(t.identifier(imported), t.identifier(imported));
          });

          var expression = t.importDeclaration(specifiers, t.stringLiteral('vue'));
          path.unshiftContainer('body', expression);
        }
      }
    }, transform_vue_jsx_1["default"]()), sugar_fragment_1["default"]())
  };
};