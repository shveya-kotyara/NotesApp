"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var fs = require('fs-extra');

module.exports =
/*#__PURE__*/
function () {
  function MovePlugin(from, to) {
    _classCallCheck(this, MovePlugin);

    this.from = from;
    this.to = to;
  }

  _createClass(MovePlugin, [{
    key: "apply",
    value: function apply(compiler) {
      var _this = this;

      compiler.hooks.done.tap('move-plugin', function () {
        if (fs.existsSync(_this.from)) {
          fs.moveSync(_this.from, _this.to, {
            overwrite: true
          });
        }
      });
    }
  }]);

  return MovePlugin;
}();