"use strict";

module.exports = function formatStats(stats, dir, api) {
  var fs = require('fs');

  var path = require('path');

  var zlib = require('zlib');

  var ui = require('cliui')({
    width: process.stdout.columns || 80
  });

  var _require = require('@vue/cli-shared-utils'),
      chalk = _require.chalk;

  var json = stats.toJson({
    hash: false,
    modules: false,
    chunks: false
  });
  var assets = json.assets ? json.assets : json.children.reduce(function (acc, child) {
    return acc.concat(child.assets);
  }, []);
  var seenNames = new Map();

  var isJS = function isJS(val) {
    return /\.js$/.test(val);
  };

  var isCSS = function isCSS(val) {
    return /\.css$/.test(val);
  };

  var isMinJS = function isMinJS(val) {
    return /\.min\.js$/.test(val);
  };

  assets = assets.map(function (a) {
    a.name = a.name.split('?')[0];
    return a;
  }).filter(function (a) {
    if (seenNames.has(a.name)) {
      return false;
    }

    seenNames.set(a.name, true);
    return isJS(a.name) || isCSS(a.name);
  }).sort(function (a, b) {
    if (isJS(a.name) && isCSS(b.name)) return -1;
    if (isCSS(a.name) && isJS(b.name)) return 1;
    if (isMinJS(a.name) && !isMinJS(b.name)) return -1;
    if (!isMinJS(a.name) && isMinJS(b.name)) return 1;
    return b.size - a.size;
  });

  function formatSize(size) {
    return (size / 1024).toFixed(2) + ' KiB';
  }

  function getGzippedSize(asset) {
    var filepath = api.resolve(path.join(dir, asset.name));
    var buffer = fs.readFileSync(filepath);
    return formatSize(zlib.gzipSync(buffer).length);
  }

  function makeRow(a, b, c) {
    return "  ".concat(a, "\t    ").concat(b, "\t ").concat(c);
  }

  ui.div(makeRow(chalk.cyan.bold("File"), chalk.cyan.bold("Size"), chalk.cyan.bold("Gzipped")) + "\n\n" + assets.map(function (asset) {
    return makeRow(/js$/.test(asset.name) ? chalk.green(path.join(dir, asset.name)) : chalk.blue(path.join(dir, asset.name)), formatSize(asset.size), getGzippedSize(asset));
  }).join("\n"));
  return "".concat(ui.toString(), "\n\n  ").concat(chalk.gray("Images and other types of assets omitted."), "\n");
};