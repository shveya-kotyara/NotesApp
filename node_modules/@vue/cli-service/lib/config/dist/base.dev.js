"use strict";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var _require = require('@vue/cli-shared-utils'),
    semver = _require.semver,
    loadModule = _require.loadModule;

module.exports = function (api, options) {
  api.chainWebpack(function (webpackConfig) {
    var isLegacyBundle = process.env.VUE_CLI_MODERN_MODE && !process.env.VUE_CLI_MODERN_BUILD;

    var resolveLocal = require('../util/resolveLocal');

    var getAssetPath = require('../util/getAssetPath');

    var inlineLimit = 4096;

    var genAssetSubPath = function genAssetSubPath(dir) {
      return getAssetPath(options, "".concat(dir, "/[name]").concat(options.filenameHashing ? '.[hash:8]' : '', ".[ext]"));
    };

    var genUrlLoaderOptions = function genUrlLoaderOptions(dir) {
      return {
        limit: inlineLimit,
        // use explicit fallback to avoid regression in url-loader>=1.1.0
        fallback: {
          loader: require.resolve('file-loader'),
          options: {
            name: genAssetSubPath(dir)
          }
        }
      };
    };

    webpackConfig.mode('development').context(api.service.context).entry('app').add('./src/main.js').end().output.path(api.resolve(options.outputDir)).filename(isLegacyBundle ? '[name]-legacy.js' : '[name].js').publicPath(options.publicPath);
    webpackConfig.resolve // This plugin can be removed once we switch to Webpack 6
    .plugin('pnp').use(_objectSpread({}, require('pnp-webpack-plugin'))).end().extensions.merge(['.mjs', '.js', '.jsx', '.vue', '.json', '.wasm']).end().modules.add('node_modules').add(api.resolve('node_modules')).add(resolveLocal('node_modules')).end().alias.set('@', api.resolve('src'));
    webpackConfig.resolveLoader.plugin('pnp-loaders').use(_objectSpread({}, require('pnp-webpack-plugin').topLevelLoader)).end().modules.add('node_modules').add(api.resolve('node_modules')).add(resolveLocal('node_modules'));
    webpackConfig.module.noParse(/^(vue|vue-router|vuex|vuex-router-sync)$/); // js is handled by cli-plugin-babel ---------------------------------------
    // vue-loader --------------------------------------------------------------
    // try to load vue in the project
    // fallback to peer vue package in the instant prototyping environment

    var vue = loadModule('vue', api.service.context) || loadModule('vue', __dirname);

    if (vue && semver.major(vue.version) === 2) {
      // for Vue 2 projects
      var vueLoaderCacheConfig = api.genCacheConfig('vue-loader', {
        'vue-loader': require('vue-loader/package.json').version,
        '@vue/component-compiler-utils': require('@vue/component-compiler-utils/package.json').version,
        'vue-template-compiler': require('vue-template-compiler/package.json').version
      });
      webpackConfig.resolve.alias.set('vue$', options.runtimeCompiler ? 'vue/dist/vue.esm.js' : 'vue/dist/vue.runtime.esm.js');
      webpackConfig.module.rule('vue').test(/\.vue$/).use('cache-loader').loader(require.resolve('cache-loader')).options(vueLoaderCacheConfig).end().use('vue-loader').loader(require.resolve('vue-loader')).options(Object.assign({
        compilerOptions: {
          whitespace: 'condense'
        }
      }, vueLoaderCacheConfig));
      webpackConfig.plugin('vue-loader').use(require('vue-loader').VueLoaderPlugin);
    } else if (vue && semver.major(vue.version) === 3) {
      // for Vue 3 projects
      var _vueLoaderCacheConfig = api.genCacheConfig('vue-loader', {
        'vue-loader': require('vue-loader-v16/package.json').version,
        '@vue/compiler-sfc': require('@vue/compiler-sfc/package.json').version
      });

      webpackConfig.resolve.alias.set('vue$', options.runtimeCompiler ? 'vue/dist/vue.esm-bundler.js' : 'vue/dist/vue.runtime.esm-bundler.js');
      webpackConfig.module.rule('vue').test(/\.vue$/).use('cache-loader').loader(require.resolve('cache-loader')).options(_vueLoaderCacheConfig).end().use('vue-loader').loader(require.resolve('vue-loader-v16')).options(_objectSpread({}, _vueLoaderCacheConfig, {
        babelParserPlugins: ['jsx', 'classProperties', 'decorators-legacy']
      })).end().end();
      webpackConfig.plugin('vue-loader').use(require('vue-loader-v16').VueLoaderPlugin); // feature flags <http://link.vuejs.org/feature-flags>

      webpackConfig.plugin('feature-flags').use(require('webpack').DefinePlugin, [{
        __VUE_OPTIONS_API__: 'true',
        __VUE_PROD_DEVTOOLS__: 'false'
      }]);
    } // static assets -----------------------------------------------------------


    webpackConfig.module.rule('images').test(/\.(png|jpe?g|gif|webp)(\?.*)?$/).use('url-loader').loader(require.resolve('url-loader')).options(genUrlLoaderOptions('img')); // do not base64-inline SVGs.
    // https://github.com/facebookincubator/create-react-app/pull/1180

    webpackConfig.module.rule('svg').test(/\.(svg)(\?.*)?$/).use('file-loader').loader(require.resolve('file-loader')).options({
      name: genAssetSubPath('img')
    });
    webpackConfig.module.rule('media').test(/\.(mp4|webm|ogg|mp3|wav|flac|aac)(\?.*)?$/).use('url-loader').loader(require.resolve('url-loader')).options(genUrlLoaderOptions('media'));
    webpackConfig.module.rule('fonts').test(/\.(woff2?|eot|ttf|otf)(\?.*)?$/i).use('url-loader').loader(require.resolve('url-loader')).options(genUrlLoaderOptions('fonts')); // Other common pre-processors ---------------------------------------------

    var maybeResolve = function maybeResolve(name) {
      try {
        return require.resolve(name);
      } catch (error) {
        return name;
      }
    };

    webpackConfig.module.rule('pug').test(/\.pug$/).oneOf('pug-vue').resourceQuery(/vue/).use('pug-plain-loader').loader(maybeResolve('pug-plain-loader')).end().end().oneOf('pug-template').use('raw').loader(maybeResolve('raw-loader')).end().use('pug-plain-loader').loader(maybeResolve('pug-plain-loader')).end().end(); // shims

    webpackConfig.node.merge({
      // prevent webpack from injecting useless setImmediate polyfill because Vue
      // source contains it (although only uses it if it's native).
      setImmediate: false,
      // process is injected via DefinePlugin, although some 3rd party
      // libraries may require a mock to work properly (#934)
      process: 'mock',
      // prevent webpack from injecting mocks to Node native modules
      // that does not make sense for the client
      dgram: 'empty',
      fs: 'empty',
      net: 'empty',
      tls: 'empty',
      child_process: 'empty'
    });

    var resolveClientEnv = require('../util/resolveClientEnv');

    webpackConfig.plugin('define').use(require('webpack').DefinePlugin, [resolveClientEnv(options)]);
    webpackConfig.plugin('case-sensitive-paths').use(require('case-sensitive-paths-webpack-plugin')); // friendly error plugin displays very confusing errors when webpack
    // fails to resolve a loader, so we provide custom handlers to improve it

    var _require2 = require('../util/resolveLoaderError'),
        transformer = _require2.transformer,
        formatter = _require2.formatter;

    webpackConfig.plugin('friendly-errors').use(require('@soda/friendly-errors-webpack-plugin'), [{
      additionalTransformers: [transformer],
      additionalFormatters: [formatter]
    }]);

    var TerserPlugin = require('terser-webpack-plugin');

    var terserOptions = require('./terserOptions');

    webpackConfig.optimization.minimizer('terser').use(TerserPlugin, [terserOptions(options)]);
  });
};