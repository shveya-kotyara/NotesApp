"use strict";

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _getLazyHashedEtag = _interopRequireDefault(require("webpack/lib/cache/getLazyHashedEtag"));

var _serializeJavascript = _interopRequireDefault(require("serialize-javascript"));

var _webpack = require("webpack");

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
} // eslint-disable-next-line import/extensions,import/no-unresolved


var Cache =
/*#__PURE__*/
function () {
  function Cache(compiler, compilation, options) {
    _classCallCheck(this, Cache);

    this.compiler = compiler;
    this.compilation = compilation;
    this.options = options;
  }

  _createClass(Cache, [{
    key: "isEnabled",
    value: function isEnabled() {
      return !!this.compilation.cache;
    }
  }, {
    key: "createCacheIdent",
    value: function createCacheIdent(task) {
      var _this$compilation$out = this.compilation.outputOptions,
          hashSalt = _this$compilation$out.hashSalt,
          hashDigest = _this$compilation$out.hashDigest,
          hashDigestLength = _this$compilation$out.hashDigestLength,
          hashFunction = _this$compilation$out.hashFunction;

      var hash = _webpack.util.createHash(hashFunction);

      if (hashSalt) {
        hash.update(hashSalt);
      }

      hash.update((0, _serializeJavascript["default"])(task.cacheKeys));
      var digest = hash.digest(hashDigest);
      var cacheKeys = digest.substr(0, hashDigestLength);
      return "".concat(this.compilation.compilerPath, "/TerserWebpackPlugin/").concat(cacheKeys, "/").concat(task.file);
    }
  }, {
    key: "get",
    value: function get(task) {
      var _this = this;

      // eslint-disable-next-line no-param-reassign
      task.cacheIdent = task.cacheIdent || this.createCacheIdent(task); // eslint-disable-next-line no-param-reassign

      task.cacheETag = task.cacheETag || (0, _getLazyHashedEtag["default"])(task.asset);
      return new Promise(function (resolve, reject) {
        _this.compilation.cache.get(task.cacheIdent, task.cacheETag, function (err, result) {
          if (err) {
            reject(err);
          } else if (result) {
            resolve(result);
          } else {
            reject();
          }
        });
      });
    }
  }, {
    key: "store",
    value: function store(task, data) {
      var _this2 = this;

      return new Promise(function (resolve, reject) {
        _this2.compilation.cache.store(task.cacheIdent, task.cacheETag, data, function (err) {
          if (err) {
            reject(err);
          } else {
            resolve(data);
          }
        });
      });
    }
  }]);

  return Cache;
}();

exports["default"] = Cache;