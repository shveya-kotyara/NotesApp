"use strict";

var _require = require('@babel/helper-module-imports'),
    addSideEffect = _require.addSideEffect; // slightly modifiled from @babel/preset-env/src/utils
// use an absolute path for core-js modules, to fix conflicts of different core-js versions
// TODO: remove the `useAbsolutePath` option in v5,
// because `core-js` is sure to be present in newer projects;
// we only need absolute path for babel runtime helpers, not for polyfills


function getModulePath(mod, useAbsolutePath) {
  var modPath = mod === 'regenerator-runtime' ? 'regenerator-runtime/runtime' : "core-js/modules/".concat(mod);
  return useAbsolutePath ? require.resolve(modPath) : modPath;
}

function createImport(path, mod, useAbsolutePath) {
  return addSideEffect(path, getModulePath(mod, useAbsolutePath));
} // add polyfill imports to the first file encountered.


module.exports = function (_ref, _ref2) {
  var types = _ref.types;
  var polyfills = _ref2.polyfills,
      _ref2$entryFiles = _ref2.entryFiles,
      entryFiles = _ref2$entryFiles === void 0 ? [] : _ref2$entryFiles,
      useAbsolutePath = _ref2.useAbsolutePath;
  return {
    name: 'vue-cli-inject-polyfills',
    visitor: {
      Program: function Program(path, state) {
        if (!entryFiles.includes(state.filename)) {
          return;
        } // imports are injected in reverse order


        polyfills.slice().reverse().forEach(function (p) {
          createImport(path, p, useAbsolutePath);
        });
      }
    }
  };
};