"use strict"; // vue compiler module for transforming `<tag>:<attribute>` to `require`

Object.defineProperty(exports, "__esModule", {
  value: true
});

var utils_1 = require("./utils");

var defaultOptions = {
  audio: 'src',
  video: ['src', 'poster'],
  source: 'src',
  img: 'src',
  image: ['xlink:href', 'href'],
  use: ['xlink:href', 'href']
};

exports["default"] = function (userOptions, transformAssetUrlsOption) {
  var options = userOptions ? Object.assign({}, defaultOptions, userOptions) : defaultOptions;
  return {
    postTransformNode: function postTransformNode(node) {
      transform(node, options, transformAssetUrlsOption);
    }
  };
};

function transform(node, options, transformAssetUrlsOption) {
  for (var tag in options) {
    if ((tag === '*' || node.tag === tag) && node.attrs) {
      (function () {
        var attributes = options[tag];

        if (typeof attributes === 'string') {
          node.attrs.some(function (attr) {
            return rewrite(attr, attributes, transformAssetUrlsOption);
          });
        } else if (Array.isArray(attributes)) {
          attributes.forEach(function (item) {
            return node.attrs.some(function (attr) {
              return rewrite(attr, item, transformAssetUrlsOption);
            });
          });
        }
      })();
    }
  }
}

function rewrite(attr, name, transformAssetUrlsOption) {
  if (attr.name === name) {
    var value = attr.value; // only transform static URLs

    if (value.charAt(0) === '"' && value.charAt(value.length - 1) === '"') {
      attr.value = utils_1.urlToRequire(value.slice(1, -1), transformAssetUrlsOption);
      return true;
    }
  }

  return false;
}