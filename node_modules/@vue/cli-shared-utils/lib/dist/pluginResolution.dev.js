"use strict";

var pluginRE = /^(@vue\/|vue-|@[\w-]+(\.)?[\w-]+\/vue-)cli-plugin-/;
var scopeRE = /^@[\w-]+(\.)?[\w-]+\//;
var officialRE = /^@vue\//;
var officialPlugins = ['babel', 'e2e-cypress', 'e2e-nightwatch', 'e2e-webdriverio', 'eslint', 'pwa', 'router', 'typescript', 'unit-jest', 'unit-mocha', 'vuex'];

exports.isPlugin = function (id) {
  return pluginRE.test(id);
};

exports.isOfficialPlugin = function (id) {
  return exports.isPlugin(id) && officialRE.test(id);
};

exports.toShortPluginId = function (id) {
  return id.replace(pluginRE, '');
};

exports.resolvePluginId = function (id) {
  // already full id
  // e.g. vue-cli-plugin-foo, @vue/cli-plugin-foo, @bar/vue-cli-plugin-foo
  if (pluginRE.test(id)) {
    return id;
  }

  if (id === '@vue/cli-service') {
    return id;
  }

  if (officialPlugins.includes(id)) {
    return "@vue/cli-plugin-".concat(id);
  } // scoped short
  // e.g. @vue/foo, @bar/foo


  if (id.charAt(0) === '@') {
    var scopeMatch = id.match(scopeRE);

    if (scopeMatch) {
      var scope = scopeMatch[0];
      var shortId = id.replace(scopeRE, '');
      return "".concat(scope).concat(scope === '@vue/' ? "" : "vue-", "cli-plugin-").concat(shortId);
    }
  } // default short
  // e.g. foo


  return "vue-cli-plugin-".concat(id);
};

exports.matchesPluginId = function (input, full) {
  var _short = full.replace(pluginRE, '');

  return (// input is full
    full === input || // input is short without scope
    _short === input || // input is short with scope
    _short === input.replace(scopeRE, '')
  );
};

exports.getPluginLink = function (id) {
  if (officialRE.test(id)) {
    return "https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/cli-plugin-".concat(exports.toShortPluginId(id));
  }

  var pkg = {};

  try {
    pkg = require("".concat(id, "/package.json"));
  } catch (e) {}

  return pkg.homepage || pkg.repository && pkg.repository.url || "https://www.npmjs.com/package/".concat(id.replace("/", "%2F"));
};