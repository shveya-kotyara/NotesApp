'use strict';

var ls = require('../ls.js');

var get = require('../get.js');

var put = require('../put.js');

var rm = require('../rm.js');

var verify = require('../verify.js');

var setLocale = require('../lib/util/y.js').setLocale;

var clearMemoized = require('../lib/memoization.js').clearMemoized;

var tmp = require('../lib/util/tmp.js');

setLocale('en');
var x = module.exports;

x.ls = function (cache) {
  return ls(cache);
};

x.ls.stream = function (cache) {
  return ls.stream(cache);
};

x.get = function (cache, key, opts) {
  return get(cache, key, opts);
};

x.get.byDigest = function (cache, hash, opts) {
  return get.byDigest(cache, hash, opts);
};

x.get.sync = function (cache, key, opts) {
  return get.sync(cache, key, opts);
};

x.get.sync.byDigest = function (cache, key, opts) {
  return get.sync.byDigest(cache, key, opts);
};

x.get.stream = function (cache, key, opts) {
  return get.stream(cache, key, opts);
};

x.get.stream.byDigest = function (cache, hash, opts) {
  return get.stream.byDigest(cache, hash, opts);
};

x.get.copy = function (cache, key, dest, opts) {
  return get.copy(cache, key, dest, opts);
};

x.get.copy.byDigest = function (cache, hash, dest, opts) {
  return get.copy.byDigest(cache, hash, dest, opts);
};

x.get.info = function (cache, key) {
  return get.info(cache, key);
};

x.get.hasContent = function (cache, hash) {
  return get.hasContent(cache, hash);
};

x.get.hasContent.sync = function (cache, hash) {
  return get.hasContent.sync(cache, hash);
};

x.put = function (cache, key, data, opts) {
  return put(cache, key, data, opts);
};

x.put.stream = function (cache, key, opts) {
  return put.stream(cache, key, opts);
};

x.rm = function (cache, key) {
  return rm.entry(cache, key);
};

x.rm.all = function (cache) {
  return rm.all(cache);
};

x.rm.entry = x.rm;

x.rm.content = function (cache, hash) {
  return rm.content(cache, hash);
};

x.setLocale = function (lang) {
  return setLocale(lang);
};

x.clearMemoized = function () {
  return clearMemoized();
};

x.tmp = {};

x.tmp.mkdir = function (cache, opts) {
  return tmp.mkdir(cache, opts);
};

x.tmp.withTmp = function (cache, opts, cb) {
  return tmp.withTmp(cache, opts, cb);
};

x.verify = function (cache, opts) {
  return verify(cache, opts);
};

x.verify.lastRun = function (cache) {
  return verify.lastRun(cache);
};